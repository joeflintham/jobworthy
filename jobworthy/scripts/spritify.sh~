#!/bin/bash

# the following variables are used to select sources file, background properties  and specify the output file type / name / location
filePrefix='*' # -p
outputFilename='output' # -o
outputFormat='png' # -f
tile='none' # -t

#cssPathToImage should be the relative path from the location of the css directive to the image location
cssPathToImage='./' # -c

# these parameters are used to generate the data-x points that are used by skrollr
scrollIncrement='50' # -s
initialOffset=0 # -i
loop=0 # -l

while getopts "p:o:f:c:s:t:i:l:" opt
do 
    case "$opt" in 
	o) 
	    outputFilename=$OPTARG
	    ;;
	p) 
	    filePrefix=$OPTARG
	    ;;
	f) 
	    outputFormat=$OPTARG
	    ;;
	c) 
	    cssPath=$OPTARG
	    ;;
	s) 
	    scrollIncrement=$OPTARG
	    ;;
	i) 
	    initialOffset=$OPTARG
	    ;;
	t) 
	    tile=$OPTARG
	    ;;
	l) 
	    loop=$OPTARG
	    ;;
	?) 
	    exit
	    ;;
    esac
done

let width=0;
let totalWidth=0;
let height=0;
dataprops='';

let b=0;
for dims in `feh -l $filePrefix | awk '{gsub(/\t+/,",")}1' | cut -d, -f3,4`
  do
    IFS=","; dima=($dims)
    let w=0; w=${dima[0]}
    let h=0; h=${dima[1]}
    if [ `echo $w | grep -o '^[0-9]*$'` ] 
    then
	let totalWidth=$totalWidth+$w
	if [ $h -gt $height ]; then let height=$h; fi;
	if [ $w -gt $width ]; then let width=$w; fi;
	si=$(((b * scrollIncrement) + initialOffset))
	bp=$(((b * width) + 1))
	dataprops=$dataprops" data-"$si"=\"background-position:!-"$bp"px 0;\""

	let b=$b+1
    fi
done

if [ "$loop" -gt 1 ]
then
    let c=0;
    dataprops=''
    while [ "$c" -lt $loop ]
    do
	d=0;
	while [ "$d" -lt $b ]
	do 
	    si=$(((d * scrollIncrement) + initialOffset + ($c * $b * scrollIncrement)))
	    bp=$(((d * width) + 1))
	    dataprops=$dataprops" data-"$si"=\"background-position:!-"$bp"px 0;\""
	    ((d++))
	done
	((c++))
    done
fi

if [ "$totalWidth" -gt "0" -a "$height" -gt "0" -a "$b" -gt "0" ]
then    
    echo; 
    echo -e "Making an image called '$outputFilename.$outputFormat' which is $width x $height pixels in size."
    echo ;

    texture=''
    if [ "$tile" != "" ]
    then
	texture="-texture $tile " 
    fi

    echo `montage -verbose "$filePrefix" -tile "$b"x1 -geometry "$width"x"$height"+0+0 -background Transparent -texture "$tile" "$outputFilename"."$outputFormat"`
    echo ;

    echo ; echo 
    echo -e "... done"
    echo ;

    echo ; echo 
    echo -e "Going to create a HTML fragment ready for skrollr compatibility!"
    echo ;


    echo `touch "$outputFilename".html`
    
 
    html="<div style=\"width: "$width"px; height: "$height"px; overflow: hidden; background: transparent url("$cssPath$outputFilename"."$outputFormat") 0 0;\""$dataprops"></div>"
    
    echo $html > "$outputFilename".html

    echo "complete"
fi
